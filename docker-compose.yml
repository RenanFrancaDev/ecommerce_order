services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ecommerce-network

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecommerce-api
    ports:
      - "8080:8080"
    environment:
      - APP_MODE=api
      - MONGO_URI=${MONGO_URI}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - RABBITMQ_URL=${RABBITMQ_URL}
      - ORDERS_QUEUE=${ORDERS_QUEUE}
      - GIN_MODE=${GIN_MODE}
    volumes:
      - .env:/app/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - ecommerce-network
    restart: unless-stopped

  consumer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecommerce-consumer
    environment:
      - APP_MODE=consumer
      - MONGO_URI=${MONGO_URI}
      - MONGO_DATABASE=${MONGO_DATABASE}
      - RABBITMQ_URL=${RABBITMQ_URL}
      - ORDERS_QUEUE=${ORDERS_QUEUE}
    volumes:
      - .env:/app/.env
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - ecommerce-network
    restart: unless-stopped

networks:
  ecommerce-network:
    driver: bridge
